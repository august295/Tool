#pragma once

#include <map>
#include <set>
#include <string>

#include <QtWidgets/QWidget>

#include "ParseHeader/TypeParser.h"

#include "ui_ParseHeaderWidget.h"

class ParseHeaderWidget : public QWidget
{
    Q_OBJECT

public:
    ParseHeaderWidget(QWidget* parent = Q_NULLPTR);
    ~ParseHeaderWidget();

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	解析文件. </summary>
    ///
    /// <remarks>	August295, 2022/9/7. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    void ParseFiles();

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	初始化界面. </summary>
    ///
    /// <remarks>	August295, 2022/9/6. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    void InitTreeWidget(const std::string& selectStr = "");
    void InitTableWidget();

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	获取结构体类型列表. </summary>
    ///
    /// <remarks>	August295, 2022/9/8. </remarks>
    ///
    /// <param name="structTypeList">	[in,out] 结构体类型列表. </param>
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    void GetStructTypeList(QStringList& structTypeList);

public slots:
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	结构体操作. </summary>
    ///		1. 刷新结构体
    ///		2. 查询结构体
    ///     3. 保存到文件
    /// <remarks>	August295, 2022/9/6. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    void DataFlush();
    void DataSelect();
    void DataSave();

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	结构体显示. </summary>
    ///
    /// <remarks>	August295, 2022/9/6. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    void DataShow(QTreeWidgetItem* item, int column);
    void ShowTableStruct(const std::string& file, const std::string& stru);

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	右键菜单. </summary>
    ///		1. 显示菜单
    ///     2. 添加结构体
    ///     3. 完成结构体添加
    /// <remarks>	August295, 2022/9/7. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    void ShowTreeRightMenu(const QPoint& pos);
    void AddStruct();
    void AddStructFinish();

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	组装结构体字符串. </summary>
    ///
    /// <remarks>	August295, 2022/9/8. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    void PackageStruct(const std::string& structName, const std::list<StructDeclaration>& varList, std::vector<std::string>& lineVec);

public:
    enum NodeType
    {
        ROOT = QTreeWidgetItem::UserType,
        NODE,
        LEAF,
    };

private:
    Ui::ParseHeaderClass ui;

    struct ParseHeaderWidgetPrivate;
    ParseHeaderWidgetPrivate* _p;
};
